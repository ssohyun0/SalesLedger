plugins {
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.1.0'
  id 'org.beryx.jlink' version '3.0.1'
}

group = 'org.example'
version = '1.0.0'

repositories {
  mavenCentral()
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

dependencies {
  implementation 'org.controlsfx:controlsfx:11.2.1'
  implementation 'org.xerial:sqlite-jdbc:3.46.0.0'
}

//tasks.withType(JavaExec) {
//  jvmArgs = [
//          '--module-path', '/Users/jangsohyun/JavaFX/javafx-sdk-24.0.2/lib',
//          '--add-modules', 'javafx.controls,javafx.fxml'
//  ]
//}

application {
  mainModule = 'org.example.salesledger'
  mainClass = 'org.example.salesledger.MainApplication'
}

javafx {
  version = '21.0.2'
  modules = ['javafx.controls', 'javafx.fxml']
}

jlink {
  addExtraDependencies('javafx')
  mergedModuleName = 'salesledger'
  forceMerge 'controlsfx', 'sqlite-jdbc'

  launcher {
    name = 'SalesLedger'
  }

  jpackage {
    installerType = 'exe'
    appVersion = project.version
    vendor = 'YourName'

    installerOptions = [
            '--win-menu',
            '--win-shortcut'
    ]

    def ico = file('packaging/icon.ico')
    if (ico.exists()) {
      icon = ico
    }
  }
  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  tasks.named('run', JavaExec) {
    dependsOn 'jar'                 // 실행 전에 JAR 생성
    mainClass = null                // 기본 mainClass 사용 안 함
    classpath = files()             // classpath 비움(모듈 방식으로 실행)

    // 런타임 클래스패스 + 빌드된 앱 JAR을 모듈 경로로 구성
    def mp = files(
            "$buildDir/libs/${project.name}-${project.version}.jar",
            configurations.runtimeClasspath
    ).asPath

    jvmArgs = [
            '--module-path', mp,
            '-m', 'org.example.salesledger/org.example.salesledger.MainApplication'
    ]
  }
}